# Generated by Django 2.2.1 on 2019-05-20 22:14

import core.fields
import core.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                (
                    'id',
                    core.fields.CharField(
                        help_text='Telegram chat ID.',
                        primary_key=True,
                        serialize=False,
                        unique=True
                    )
                ),
                ('title', core.fields.CharField(blank=True, null=True)),
                ('username', core.fields.CharField(blank=True, null=True)),
                ('type', core.fields.CharField()),
                (
                    'buttons',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=core.models.default_buttons,
                        size=None
                    )
                ),
                ('show_credits', models.BooleanField(default=True)),
                ('add_padding', models.BooleanField(default=True)),
                ('columns', models.IntegerField(default=4)),
                (
                    'allowed_types',
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        default=core.models.default_allowed_types,
                        size=None
                    )
                ),
            ],
            bases=(core.models.TGMixin, models.Model),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                (
                    'id',
                    core.fields.CharField(
                        help_text='Telegram user ID.',
                        primary_key=True,
                        serialize=False,
                        unique=True
                    )
                ),
                ('username', core.fields.CharField(blank=True, null=True)),
                ('first_name', core.fields.CharField()),
                ('last_name', core.fields.CharField(blank=True, null=True)),
            ],
            bases=(core.models.TGMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                (
                    'id',
                    core.fields.CharField(
                        help_text='Telegram message ID merged with chat ID.',
                        primary_key=True,
                        serialize=False,
                        unique=True
                    )
                ),
                ('date', models.DateTimeField()),
                (
                    'original_message_id',
                    core.fields.CharField(
                        help_text='Telegram ID of original message w/o appended chat ID.'
                    )
                ),
                (
                    'forward_from_message_id',
                    core.fields.CharField(
                        blank=True,
                        help_text='Telegram ID of original forwarded message w/o appended chat ID.',
                        null=True
                    )
                ),
                (
                    'chat',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Chat')
                ),
                (
                    'forward_from',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='forward_messages',
                        to='core.User'
                    )
                ),
                (
                    'forward_from_chat',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='forward_messages',
                        to='core.Chat'
                    )
                ),
                (
                    'from_user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='messages',
                        to='core.User'
                    )
                ),
            ],
            bases=(core.models.TGMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Button',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    )
                ),
                ('index', models.IntegerField()),
                ('text', core.fields.CharField(max_length=100)),
                ('count', models.IntegerField(default=0)),
                ('permanent', models.BooleanField(default=False)),
                (
                    'message',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.Message'
                    )
                ),
            ],
            options={
                'ordering': ('index',),
                'unique_together': {('message', 'text')},
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    )
                ),
                (
                    'button',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.Button'
                    )
                ),
                (
                    'message',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.Message'
                    )
                ),
                (
                    'user',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.User')
                ),
            ],
            options={
                'unique_together': {('user', 'message')},
            },
        ),
    ]
